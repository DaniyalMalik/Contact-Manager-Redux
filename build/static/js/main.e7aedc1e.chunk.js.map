{"version":3,"sources":["components/contacts/Contact.js","actions/actionCreator.js","actions/types.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contacts","name","email","phone","className","style","cursor","onClick","setState","color","float","bind","to","paddingRight","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","map","contact","get","res","data","Header","branding","About","TextInputGroup","label","placeholder","value","onChange","htmlFor","required","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","addContact","history","push","post","EditContact","updatedContact","match","params","updateContact","nextProps","nextState","getContact","put","NotFound","initialState","combineReducers","action","filter","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","basename","process","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2dAOMA,G,iNACJC,MAAQ,CACNC,iBAAiB,G,EAGnBC,cAAgB,SAACC,GACf,EAAKC,MAAMC,cAAcF,I,wEAGjB,IAAD,SAC4BG,KAAKF,MAAMG,SAAtCJ,EADD,EACCA,GAAIK,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBT,EAAoBK,KAAKN,MAAzBC,gBAER,OACE,yBAAKU,UAAU,kBACb,4BACGH,EAAM,IACP,uBACEG,UAAU,mBACVC,MAAO,CAAEC,OAAQ,WACjBC,QAAS,WACP,EAAKC,SAAS,CACZd,iBAAkB,EAAKD,MAAMC,qBAInC,uBACEU,UAAU,eACVC,MAAO,CAAEC,OAAQ,UAAWG,MAAO,MAAOC,MAAO,SACjDH,QAASR,KAAKJ,cAAcgB,KAAKZ,KAAMH,KACnC,IACN,kBAAC,IAAD,CAAMgB,GAAE,gBAAWhB,IACjB,uBACEQ,UAAU,oBACVC,MAAO,CACLC,OAAQ,UACRI,MAAO,QACPD,MAAO,QACPI,aAAc,WAKrBnB,EACC,4BACE,sCAAYQ,GACZ,wCAAcC,IAEd,U,GAhDUW,cA2DPC,cAAQ,KAAM,CAAEjB,cC/BF,SAACF,GAAD,8CAAQ,WAAOoB,GAAP,SAAAC,EAAA,+EAE3BC,IAAMC,OAAN,qDAA2DvB,IAFhC,OAGjCoB,EAAS,CACPI,KCrCwB,iBDsCxBC,QAASzB,IALsB,+CAQjCoB,EAAS,CACPI,KC1CwB,iBD2CxBC,QAASzB,IAVsB,wDAAR,wDD+BdmB,CAAiCvB,GG3D1C8B,G,kMAEFvB,KAAKF,MAAM0B,gB,+BAGH,IACAvB,EAAaD,KAAKF,MAAlBG,SAER,OACE,yBAAKI,UAAU,mBACb,4BACE,0BAAMA,UAAU,iBAAhB,WADF,SAGCJ,EAASwB,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAASzB,SAAUyB,Y,GAdNX,cA8BRC,eAJS,SAACtB,GAAD,MAAY,CAClCO,SAAUP,EAAMgC,QAAQzB,YAGc,CAAEuB,YF5Bf,yDAAM,WAAOP,GAAP,eAAAC,EAAA,sEACbC,IAAMQ,IAAI,8CADG,OACzBC,EADyB,OAE/BX,EAAS,CACPI,KCZwB,eDaxBC,QAASM,EAAIC,OAJgB,2CAAN,wDE4BZb,CAA0CO,G,MCN1CO,MA3Bf,SAAgBhC,GACd,OACE,wBAAIO,UAAU,iBACZ,yBAAKA,UAAU,eACb,4BAAKP,EAAMiC,WAEb,yBAAK1B,UAAU,gBACb,4BACE,kBAAC,IAAD,CAAMQ,GAAG,KACP,uBAAGR,UAAU,gBADf,UAIF,4BACE,kBAAC,IAAD,CAAMQ,GAAG,QACP,uBAAGR,UAAU,gBADf,SAIF,4BACE,kBAAC,IAAD,CAAMQ,GAAG,UACP,uBAAGR,UAAU,oBADf,c,MCTK2B,MAVf,WACE,OACE,yBAAK3B,UAAY,gBACf,qDACA,0EACA,uBAAGA,UAAY,gBAAf,mB,QCLA4B,EAAiB,SAAC,GAOjB,IANLC,EAMI,EANJA,MACAhC,EAKI,EALJA,KACAmB,EAII,EAJJA,KACAc,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,6BACE,2BAAOC,QAASpC,GAAOgC,GACvB,4BACE,2BACEhC,KAAMA,EACNmB,KAAMA,EACNc,YAAaA,EACbC,MAAOA,EACPC,SAAUA,EACVE,UAAQ,OAOlBN,EAAeO,aAAe,CAC5BnB,KAAM,QAYOY,QClCTQ,G,iNACJ/C,MAAQ,CACNQ,KAAM,GACNC,MAAO,GACPC,MAAO,I,EAGTiC,SAAW,SAACK,GAAD,OAAO,EAAKjC,SAAL,eAAiBiC,EAAEC,OAAOzC,KAAOwC,EAAEC,OAAOP,S,EAE5DQ,SAAW,SAACF,GACVA,EAAEG,iBADc,MAEe,EAAKnD,MAE9BoD,EAAa,CACjB5C,KALc,EAERA,KAINC,MANc,EAEFA,MAKZC,MAPc,EAEKA,OAQrB,EAAKN,MAAMiD,WAAWD,GAEtB,EAAKrC,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,MAAO,KAGT,EAAKN,MAAMkD,QAAQC,KAAK,M,wEAGhB,IAAD,EACwBjD,KAAKN,MAA5BQ,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MACrB,OACE,0BAAMC,UAAU,oBAAoBuC,SAAU5C,KAAK4C,UACjD,yBAAKvC,UAAU,qBACb,6CAEF,wBAAIA,UAAU,qBACZ,kBAAC,EAAD,CACE6B,MAAM,OACNhC,KAAK,OACLiC,YAAY,gBACZC,MAAOlC,EACPmC,SAAUrC,KAAKqC,WAEjB,kBAAC,EAAD,CACEH,MAAM,QACNhC,KAAK,QACLmB,KAAK,QACLc,YAAY,iBACZC,MAAOjC,EACPkC,SAAUrC,KAAKqC,WAEjB,kBAAC,EAAD,CACEH,MAAM,QACNhC,KAAK,QACLiC,YAAY,iBACZC,MAAOhC,EACPiC,SAAUrC,KAAKqC,WAEjB,4BACE,2BAAOhB,KAAK,SAASe,MAAM,uB,GA7DdrB,cAyEVC,cAAQ,KAAM,CAAE+B,WNvDL,SAACrB,GAAD,8CAAa,WAAOT,GAAP,eAAAC,EAAA,sEACnBC,IAAM+B,KACtB,6CACAxB,GAHmC,OAC/BE,EAD+B,OAKrCX,EAAS,CACPI,KC9BuB,cD+BvBC,QAASM,EAAIC,OAPsB,2CAAb,wDMuDXb,CAA8ByB,GCxEvCU,G,iNACJzD,MAAQ,CACNQ,KAAM,GACNC,MAAO,GACPC,MAAO,I,EAoBTiC,SAAW,SAACK,GAAD,OAAO,EAAKjC,SAAL,eAAiBiC,EAAEC,OAAOzC,KAAOwC,EAAEC,OAAOP,S,EAE5DQ,SAAW,SAACF,GACVA,EAAEG,iBADc,MAEe,EAAKnD,MAA5BQ,EAFQ,EAERA,KAAMC,EAFE,EAEFA,MAAOC,EAFL,EAEKA,MAIfgD,EAAiB,CACrBvD,GAHa,EAAKC,MAAMuD,MAAMC,OAAxBzD,GAINK,OACAC,QACAC,SAGF,EAAKN,MAAMyD,cAAcH,GAEzB,EAAK3C,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,MAAO,KAGT,EAAKN,MAAMkD,QAAQC,KAAK,M,gGAxCOO,EAAWC,GAC1C,GAAIA,EAAU/B,UAAY1B,KAAKF,MAAM4B,QAAS,CAAC,IAAD,EACb8B,EAAU9B,QAAjCxB,EADoC,EACpCA,KAAME,EAD8B,EAC9BA,MAAOD,EADuB,EACvBA,MACrBH,KAAKS,SAAS,CACZP,OACAC,QACAC,a,0CAKe,IACXP,EAAOG,KAAKF,MAAMuD,MAAMC,OAAxBzD,GAERG,KAAKF,MAAM4D,WAAW7D,K,+BA6Bd,IAAD,EACwBG,KAAKN,MAA5BQ,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MACrB,OACE,0BAAMC,UAAU,qBAAqBuC,SAAU5C,KAAK4C,UAClD,yBAAKvC,UAAU,sBACb,8CAEF,wBAAIA,UAAU,sBACZ,kBAAC,EAAD,CACE6B,MAAM,OACNhC,KAAK,OACLiC,YAAY,gBACZC,MAAOlC,EACPmC,SAAUrC,KAAKqC,WAEjB,kBAAC,EAAD,CACEH,MAAM,QACNhC,KAAK,QACLmB,KAAK,QACLc,YAAY,iBACZC,MAAOjC,EACPkC,SAAUrC,KAAKqC,WAEjB,kBAAC,EAAD,CACEH,MAAM,QACNhC,KAAK,QACLiC,YAAY,iBACZC,MAAOhC,EACPiC,SAAUrC,KAAKqC,WAEjB,4BACE,2BAAOhB,KAAK,SAASe,MAAM,0B,GAjFbrB,cAmGXC,eAJS,SAACtB,GAAD,MAAY,CAClCgC,QAAShC,EAAMgC,QAAQA,WAGe,CAAE6B,cP1Db,SAAC7B,GAAD,8CAAa,WAAOT,GAAP,eAAAC,EAAA,sEACtBC,IAAMwC,IAAN,qDAC8BjC,EAAQ7B,IACtD6B,GAHsC,OAClCE,EADkC,OAKxCX,EAAS,CACPI,KCpD0B,iBDqD1BC,QAASM,EAAIC,OAPyB,2CAAb,uDO0D4B6B,WP3F/B,SAAC7D,GAAD,8CAAQ,WAAOoB,GAAP,eAAAC,EAAA,sEACdC,IAAMQ,IAAN,qDAC8B9B,IAFhB,OAC1B+B,EAD0B,OAIhCX,EAAS,CACPI,KCjBuB,cDkBvBC,QAASM,EAAIC,OANiB,2CAAR,wDO2FXb,CACbmC,G,cC9FaS,MAXf,WACE,OACE,yBAAKvD,UAAU,mBACb,4BACE,0BAAMA,UAAU,kBAAhB,OADF,mBAGA,iE,gCCDAwD,EAAe,CACnB5D,SAAU,GACVyB,QAAS,ICPIoC,cAAgB,CAC7BpC,QDSa,WAAyC,IAA/BhC,EAA8B,uDAAtBmE,EAAcE,EAAQ,uCACrD,OAAQA,EAAO1C,MACb,IRfwB,eQgBtB,OAAO,eACF3B,EADL,CAEEO,SAAU8D,EAAOzC,UAErB,IRhBuB,cQiBrB,OAAO,eACF5B,EADL,CAEEgC,QAASqC,EAAOzC,UAEpB,IRvB0B,iBQwBxB,OAAO,eACF5B,EADL,CAEEO,SAAUP,EAAMO,SAAS+D,QACvB,SAACtC,GAAD,OAAaA,EAAQ7B,KAAOkE,EAAOzC,aAGzC,IR7B0B,iBQ8BxB,OAAO,eACF5B,EADL,CAEEO,SAAUP,EAAMO,SAASwB,KAAI,SAACC,GAAD,OAC3BA,EAAQ7B,KAAOkE,EAAOzC,QAAQzB,GACzB6B,EAAUqC,EAAOzC,QAClBI,OAGV,IRxCuB,cQyCrB,OAAO,eACFhC,EADL,CAEEO,SAAS,CAAE8D,EAAOzC,SAAV,mBAAsB5B,EAAMO,aAExC,QACE,OAAOP,MEzCPuE,EAAa,CAACC,KAWLC,EATDC,YACZC,EALmB,GAOnBC,YACEC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iCCiBnCC,G,uLAhBX,OACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,CAAQQ,SAAUC,0BAChB,kBAAC,EAAD,CAAQ7C,SAAS,oBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,OAAOC,UAAWtC,IACpC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,YAAYC,UAAW5B,IACzC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,SAASC,UAAW/C,IACtC,kBAAC,IAAD,CAAO+C,UAAWnB,KACV,U,GAZF7C,cCAEiE,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAAS7B,MACvB,2DCbN8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e7aedc1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteContact } from \"../../actions/actionCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./contact.css\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contacts;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"contact-parent\">\r\n        <h3>\r\n          {name}{\" \"}\r\n          <i\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              this.setState({\r\n                showContactInfo: !this.state.showContactInfo,\r\n              });\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          ></i>{\" \"}\r\n          <Link to={`/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"black\",\r\n                paddingRight: \"5px\",\r\n              }}\r\n            />\r\n          </Link>\r\n        </h3>\r\n        {showContactInfo ? (\r\n          <ul>\r\n            <li>Email: {email}</li>\r\n            <li>Contact: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contacts: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteContact })(Contact);\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const getContact = (id) => async (dispatch) => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  const res = await axios.post(\r\n    \"https://jsonplaceholder.typicode.com/posts\",\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n      type: DELETE_CONTACT,\r\n      payload: id,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: DELETE_CONTACT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\nexport const updateContact = (contact) => async (dispatch) => {\r\n  const res = await axios.put(\r\n    `https://jsonplaceholder.typicode.com/posts/${contact.id}`,\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: UPDATE_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"../contacts/Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContacts } from \"../../actions/actionCreator\";\r\nimport \"./contacts.css\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <div className=\"contacts-parent\">\r\n        <h1>\r\n          <span className=\"contacts-span\">Contact</span> List\r\n        </h1>\r\n        {contacts.map((contact) => (\r\n          <Contact contacts={contact} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.object.isRequired,\r\n  getContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getContacts })(Contacts);\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <ul className=\"header-parent\">\r\n      <div className=\"header-name\">\r\n        <h3>{props.branding}</h3>\r\n      </div>\r\n      <div className=\"header-items\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <i className=\"fas fa-home\" /> Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/add\">\r\n            <i className=\"fas fa-plus\" /> Add\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">\r\n            <i className=\"fas fa-question\" /> About\r\n          </Link>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./about.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className = \"about-parent\">\r\n      <h1>About Contact Manager</h1>\r\n      <p>It is a simple app to manage your contacts!</p>\r\n      <p className = \"about-suffix\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <li>\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </li>\r\n    </div>\r\n  );\r\n};  \r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../actions/actionCreator\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./addcontact.css\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <form className=\"addcontact-parent\" onSubmit={this.onSubmit}>\r\n        <div className=\"addcontact-child1\">\r\n          <h3>Add Contact </h3>\r\n        </div>\r\n        <ul className=\"addcontact-child2\">\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name...\"\r\n            value={name}\r\n            onChange={this.onChange}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email...\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter phone...\"\r\n            value={phone}\r\n            onChange={this.onChange}\r\n          />\r\n          <li>\r\n            <input type=\"submit\" value=\"Add Contact\" />\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addContact })(AddContact);\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport \"./editcontact.css\";\r\nimport { updateContact } from \"../../actions/actionCreator\";\r\nimport { getContact } from \"../../actions/actionCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\r\n    if (nextState.contact !== this.props.contact) {\r\n      const { name, phone, email } = nextProps.contact;\r\n      this.setState({\r\n        name,\r\n        email,\r\n        phone,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.getContact(id);\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updatedContact = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    this.props.updateContact(updatedContact);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <form className=\"editcontact-parent\" onSubmit={this.onSubmit}>\r\n        <div className=\"editcontact-child1\">\r\n          <h3>Edit Contact </h3>\r\n        </div>\r\n        <ul className=\"editcontact-child2\">\r\n          <TextInputGroup\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name...\"\r\n            value={name}\r\n            onChange={this.onChange}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email...\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n          />\r\n          <TextInputGroup\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter phone...\"\r\n            value={phone}\r\n            onChange={this.onChange}\r\n          />\r\n          <li>\r\n            <input type=\"submit\" value=\"Update Contact\" />\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nEditContact.propTypes = {\r\n  updateContact: PropTypes.func.isRequired,\r\n  getContact: PropTypes.func.isRequired,\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: state.contact.contact,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateContact, getContact })(\r\n  EditContact\r\n);\r\n","import React from \"react\";\r\nimport \"./notfound.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"parent-notfound\">\r\n      <h1>\r\n        <span className=\"child-notfound\">404</span> Page Not Found\r\n      </h1>\r\n      <p>Sorry, this page does not exist!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload,\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer.js\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Header branding=\"Contact Manager\" />\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/add\" component={AddContact} />\n            <Route exact path=\"/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={NotFound} />\n          </Switch>{\" \"}\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}